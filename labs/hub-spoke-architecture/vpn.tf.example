# -------------------------------------------------------------------
# DEPLOY A CLASSIC VPN IN GCP
# This is an exmaple of deploying a classic based VPN in GCP back to
# an on-premises data center.
# -------------------------------------------------------------------
# Deploy a cloud router that will be attached to the classic VPN
resource "google_compute_router" "cr-us-central1" {
  name    = "cr-us-central1-to-prod-vpc-tunnels"
  region  = var.regions.primary
  network = module.landing-trusted-vpc.network_name
  project = var.project_id
}

module "classic_vpn" {
  # Deploy the classic VPN in GCP using the GCP module. Pin the Github
  # module to a specific version
  source  = "terraform-google-modules/vpn/google"
  version = "~> 4.0"

  project_id         = var.project_id
  network            = module.landing-trusted-vpc.network_name
  region             = var.regions.primary
  gateway_name       = "vpn-managed-internal"
  tunnel_name_prefix = "vpn-tn-manage-internal"
  shared_secret      = var.shared_secret
  tunnel_count       = 1
  peer_ips           = var.peer_ips
  route_priority     = 1000
  remote_subnet      = var.remote_subnet
  ike_version        = 2
}

# --------------------------------------------------------------------
# On-Prem VPN
# Variables
# --------------------------------------------------------------------

variable "peer_ips" {
  description = "External IP address of the on-prem VPN Gateway"
  type        = list(string)
}

variable "shared_secret" {
  description = "The shared secret between tunnels."
  type        = string
  default     = "mySecret"
}

variable "remote_subnet" {
  description = "The subnets at the remote location. Use the on-premises CIDR."
  type        = list(string)
  default     = ["192.168.0.0/16"]
}


# --------------------------------------------------------------------
# On-Prem VPN
# Outputs
# --------------------------------------------------------------------

output "gateway_self_link" {
  description = "The self-link of the Gateway"
  value       = module.classic_vpn.gateway_self_link
}

output "gateway_ip" {
  description = "The VPN Gateway Public IP"
  value       = module.classic_vpn.gateway_ip
}

output "vpn_tunnels_names-static" {
  description = "The VPN tunnel name is"
  value       = module.classic_vpn.vpn_tunnels_names-static
}

output "ipsec_secret-static" {
  description = "The shared secret is:"
  value       = module.classic_vpn.ipsec_secret-static
  sensitive   = true
}